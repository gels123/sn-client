using System;
using System.IO;
using Luban;
using SimpleJSON;
using UnityEngine;

{{namespace_with_grace_begin __namespace}}
public partial class {{__name}}
{
    {{~for table in __tables ~}}
{{~if table.comment != '' ~}}
    /// <summary>
    /// {{escape_comment table.comment}}
    /// </summary>
{{~end~}}
    private {{table.full_name}} _{{format_property_name __code_style table.name}};
    public {{table.full_name}} {{format_property_name __code_style table.name}}
    {
        get
        {
            if (_{{format_property_name __code_style table.name}} == null)
            {
                _{{format_property_name __code_style table.name}} = new {{table.full_name}}(loader("{{table.output_data_file}}"));
                _{{format_property_name __code_style table.name}}.ResolveRef(this);
            }
            return _{{format_property_name __code_style table.name}};
        }
        set
        {
            _{{format_property_name __code_style table.name}} = value;
        }
    }
    
    {{~end~}}
    
    public {{__name}}(bool load = false)
    {
        if (load)
        {
            {{~for table in __tables ~}}
            {{format_property_name __code_style table.name}} = new {{table.full_name}}(loader("{{table.output_data_file}}"));
            {{~end~}}
            ResolveRef();
        }
    }
    
    private void ResolveRef()
    {
        {{~for table in __tables ~}}
        {{format_property_name __code_style table.name}}.ResolveRef(this);
        {{~end~}}
    }
    
    protected virtual JSONNode loader(string file)
    {
        return JSON.Parse(File.ReadAllText(Application.streamingAssetsPath +"/Json/" + file + ".json", System.Text.Encoding.UTF8));
    }
}

{{namespace_with_grace_end __namespace}}